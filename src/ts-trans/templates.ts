export interface Entry {
  key: string;
  value: string;
}

export interface TranslateData {
  typ: string;
  tr: Entry[];
}

export interface PipeData {
  typ: string;
  name: string;
}

export interface TplData {
  trans: TranslateData[];
  pipes: PipeData[];
}

export const constsTpl = `// Generated by node-private-tools
import { Pipe, PipeTransform } from '@angular/core';
export const trans = {
{{#each trans}}  {{{typ}}}: {
{{#each tr}}    {{{key}}}: '{{{value}}}',
{{/each}}
  },
{{/each}}
};

{{#each pipes}}@Pipe({ name: '{{{name}}}' })
export class {{{typ}}}Pipe implements PipeTransform {
  transform(value: string) {
    return (<any>trans).{{{typ}}}[value] || value;
  }
}
{{/each}}

export const GEN_TRANS_PIPES = [
{{#each pipes}}  {{{typ}}}Pipe,
{{/each}}
];
`;